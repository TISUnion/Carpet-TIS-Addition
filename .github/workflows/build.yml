name: _step.build

on:
  workflow_call:
    inputs:
      release:
        type: boolean
        required: false
        default: false
      target_subproject:
        description: see release.yml, leave it empty to build all
        type: string
        required: false
        default: ''
      mixin_audit:
        type: boolean
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/dev' }}

      - name: Build with gradle
        run: |
          chmod +x gradlew
          if [ -z "${{ inputs.target_subproject }}" ]; then
              echo "Building all subprojects"
              ./gradlew build
          else
              args=$(echo "${{ inputs.target_subproject }}" | tr ',' '\n' | sed 's/$/:build/' | paste -sd ' ')
              echo "Building with arguments=$args"
              ./gradlew $args
          fi
        env:
          BUILD_ID: ${{ github.run_number }}
          BUILD_RELEASE: ${{ inputs.release }}

      - name: Run Mixin Audit Check
        if: ${{ inputs.mixin_audit }}
        timeout-minutes: 10
        run: |
          mkdir -p ./run
          echo eula=true > ./run/eula.txt
          ./gradlew runClientMixinAudit

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: versions/*/build/libs/

      - name: Collect mod jars
        run: |
          shopt -s extglob
          mkdir mod-jars
          for jar in versions/*/build/libs/!(*-@(dev|sources|shadow)).jar; do
              cp -p "$jar" mod-jars/
          done
          ls -l mod-jars

      # This is the artifact recommended for users to download
      - name: Upload mod jars
        uses: actions/upload-artifact@v4
        with:
          name: mod-jars
          path: mod-jars/*.jar

      - name: Publish with gradle
        if: inputs.release || github.ref == 'refs/heads/dev'
        run: |
          if [ -z "${{ inputs.target_subproject }}" ]; then
              echo "Publishing all subprojects"
              ./gradlew publish
          else
              args=$(echo "${{ inputs.target_subproject }}" | tr ',' '\n' | sed 's/$/:publish/' | paste -sd ' ')
              echo "Publishing with arguments=$args"
              ./gradlew $args
          fi
        env:
          BUILD_ID: ${{ github.run_number }}
          BUILD_RELEASE: ${{ inputs.release }}
          FALLENS_MAVEN_TOKEN: ${{ secrets.FALLENS_MAVEN_TOKEN }}

  summary:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts

      - name: Make build summary
        run: |
          pip install jproperties
          python .github/workflows/scripts/summary.py
        env:
          TARGET_SUBPROJECT: ${{ inputs.target_subproject }}
